/*
 * This is a manifest file that'll be compiled into application.css.
 *
 * With Propshaft, assets are served efficiently without preprocessing steps. You can still include
 * application-wide styles in this file, but keep in mind that CSS precedence will follow the standard
 * cascading order, meaning styles declared later in the document or manifest will override earlier ones,
 * depending on specificity.
 *
 * Consider organizing styles into separate files for maintainability.
 */

@import "tutorial.css";

::-webkit-scrollbar {
    width: 8px;
}

::-webkit-scrollbar-track {
    background: rgba(150, 133, 115, 0.1);
    border-radius: 4px;
}

::-webkit-scrollbar-thumb {
    background-color: rgba(150, 133, 115, 0.5);
    border-radius: 4px;
}

::-webkit-scrollbar-thumb:hover {
    background-color: rgba(150, 133, 115, 0.7);
}

/* Firefox */
* {
    scrollbar-width: thin;
    scrollbar-color: rgba(150, 133, 115, 0.5) rgba(150, 133, 115, 0.1);
}

[data-music-target="toggle"].active {
    animation: pulse 2s infinite;
}

@keyframes pulse {
    0% {
        transform: scale(1);
    }
    50% {
        transform: scale(1.1);
    }
    100% {
        transform: scale(1);
    }
}

[data-controller="music"] {
    transition: transform 0.8s ease-in-out;
}

[data-controller="music"].music-playing {
    transform: translateY(-80px);
}

[data-controller="music"].mobile-music-playing {
    transform: translateY(-40px);
}

[data-music-target="speechBubble"] {
    animation: bubble-pulse 2.5s ease-in-out infinite;
}

@keyframes bubble-pulse {
    0% {
        transform: rotate(-13deg) scale(1);
    }
    50% {
        transform: rotate(-13deg) scale(1.05);
    }
    100% {
        transform: rotate(-13deg) scale(1);
    }
}

.modal {
    position: fixed;
    top: 50%;
    left: 50%;
    translate: -50% -50%;
}

body::before {
    content: '';
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: #dbc3a8;
    z-index: -1;
}

main {
    background: transparent !important;
}

.disable-transitions {
    transition: none !important;

    & * {
        transition: none !important;
    }
}