<body class="adash" style="background: var(--color-background); color: var(--color-text); min-height: 100vh; padding: 2rem;">

<div style="margin-bottom: 2rem;">
  <%= link_to "← Back to YSWS Reviews", admin_ysws_reviews_path,
      class: "pill pill-gray", style: "text-decoration: none; padding: 0.5rem 1rem; margin-bottom: 1rem;" %>
</div>

<div style="margin-bottom: 2rem;">
  <h1>
    <%= link_to @project.title, project_path(@project),
        style: "color: var(--color-primary); text-decoration: none;",
        target: "_blank" %>
    <span style="font-size: 0.5em; margin-left: 0.5rem;">
      <%= link_to "View Project →", project_path(@project),
          class: "pill pill-blue",
          style: "text-decoration: none; padding: 0.3rem 0.8rem;",
          target: "_blank" %>
    </span>
  </h1>
  <p style="color: var(--color-text-muted); margin: 0.5rem 0;">
    by <%= @project.user.display_name %> • Created <%= @project.created_at.strftime("%B %d, %Y") %>
    <% if @project.ysws_review_submission&.reviewer %>
      • Reviewed by <%= @project.ysws_review_submission.reviewer.display_name %>
    <% end %>
  </p>
  <% if @project.latest_ship_certification&.reviewer %>
    <div style="margin: 1rem 0; padding: 1rem; background: var(--color-success-subtle); border: 2px solid var(--color-success); border-radius: 8px;">
      <h3 style="margin: 0; color: var(--color-success-dark); font-size: 1.4em; display: flex; align-items: center; gap: 0.5rem;">
        <span>Ship Certified by <%= @project.latest_ship_certification.reviewer.display_name %></span>
      </h3>
      <p style="margin: 0.5rem 0 0 0; color: var(--color-success-dark); font-size: 0.9em;">
        Approved <%= @project.latest_ship_certification.created_at.strftime("%B %d, %Y at %l:%M %p") %>
      </p>
    </div>
  <% end %>
  <p style="margin: 1rem 0;"><%= @project.description %></p>

  <!-- Project Links -->
  <div style="display: flex; gap: 1rem; margin: 1rem 0; flex-wrap: wrap;">
    <% if @project.repo_link.present? %>
      <%= link_to "📁 Repository", @project.repo_link,
          class: "pill pill-gray",
          style: "text-decoration: none; padding: 0.5rem 1rem;",
          target: "_blank", rel: "noopener" %>
    <% end %>
    <% if @project.demo_link.present? %>
      <%= link_to "🚀 Demo", @project.demo_link,
          class: "pill pill-blue",
          style: "text-decoration: none; padding: 0.5rem 1rem;",
          target: "_blank", rel: "noopener" %>
    <% end %>
    <% if @project.latest_ship_certification&.proof_video&.attached? %>
      <span class="pill pill-green" style="padding: 0.5rem 1rem;">🎥 Ship Cert Video</span>
    <% end %>
  </div>

  <!-- Ship Certification Video -->
  <% if @project.latest_ship_certification&.proof_video&.attached? %>
    <div style="margin: 1rem 0;">
      <h4 style="margin: 0 0 0.5rem 0;">
        Ship Certification Video
        <% if @project.latest_ship_certification.reviewer %>
          <span style="font-size: 0.8em; color: var(--color-text-muted); font-weight: normal;">
            by <%= @project.latest_ship_certification.reviewer.display_name %>
          </span>
        <% end %>
      </h4>
      <video controls style="width: 100%; max-width: 600px; border-radius: 8px;">
        <source src="<%= url_for(@project.latest_ship_certification.proof_video) %>" type="video/mp4">
        Your browser does not support the video tag.
      </video>
    </div>
  <% end %>
</div>

<!-- Devlog Time Analysis -->
<div style="background: var(--color-card); border-radius: 8px; margin-bottom: 2rem; padding: 1.5rem;">
  <h3 style="margin: 0 0 1rem 0;">Devlog Time Analysis</h3>
  <div style="height: 300px;">
    <% devlog_data = @grouped_devlogs.values.flatten.map.with_index do |devlog, i|
         ["Devlog ##{devlog.id}", (devlog.duration_seconds || 0) / 3600.0]
       end %>
    <%= bar_chart devlog_data,
        suffix: " hrs",
        height: "300px",
        colors: ["#ec3750"],
        library: {
          plugins: {
            legend: { display: false },
            title: {
              display: true,
              text: "Time spent per devlog (hours)"
            }
          },
          scales: {
            y: {
              beginAtZero: true,
              title: {
                display: true,
                text: "Hours"
              }
            },
            x: {
              title: {
                display: true,
                text: "Devlogs"
              }
            }
          }
        } %>
  </div>
  <% all_devlogs = @grouped_devlogs.values.flatten %>
  <% total_hours = all_devlogs.sum(&:duration_seconds) / 3600.0 %>
  <% avg_hours = all_devlogs.any? ? total_hours / all_devlogs.count : 0 %>
  <% max_hours = all_devlogs.any? ? all_devlogs.map(&:duration_seconds).max / 3600.0 : 0 %>
  <% over_1hr_count = all_devlogs.count { |d| (d.duration_seconds || 0) >= 3600 } %>

  <div style="display: flex; gap: 2rem; margin-top: 1rem; flex-wrap: wrap;">
    <div style="background: var(--color-background-subtle); padding: 1rem; border-radius: 4px; flex: 1; min-width: 150px;">
      <strong>Total Time:</strong><br>
      <%= sprintf("%.1f", total_hours) %> hours
    </div>
    <div style="background: var(--color-background-subtle); padding: 1rem; border-radius: 4px; flex: 1; min-width: 150px;">
      <strong>Average per Devlog:</strong><br>
      <%= sprintf("%.1f", avg_hours) %> hours
    </div>
    <div style="background: var(--color-background-subtle); padding: 1rem; border-radius: 4px; flex: 1; min-width: 150px;">
      <strong>Longest Devlog:</strong><br>
      <%= sprintf("%.1f", max_hours) %> hours
    </div>
    <div style="background: var(--color-background-subtle); padding: 1rem; border-radius: 4px; flex: 1; min-width: 150px;">
      <strong>Devlogs ≥ 1 hour:</strong><br>
      <%= over_1hr_count %> / <%= all_devlogs.count %>
    </div>
  </div>
</div>

<%= form_with url: admin_ysws_review_path(@project), method: :patch, local: true do |form| %>
  <% @grouped_devlogs.each do |ship_event, devlogs| %>
    <div style="background: var(--color-card); border-radius: 8px; margin-bottom: 2rem; overflow: hidden;">
      <div style="background: var(--color-background-subtle); padding: 1rem; border-bottom: 1px solid var(--color-border);">
        <h3 style="margin: 0;">
          <% if ship_event %>
            Ship Event: <%= ship_event.created_at.strftime("%B %d, %Y") %>
          <% else %>
            Unshipped devlogs
          <% end %>
        </h3>
      </div>

      <% devlogs.each_with_index do |devlog, index| %>
        <div style="padding: 1rem; border-bottom: 1px solid var(--color-border); <%= 'background-color: var(--color-background);' if index.even? %>">
          <div style="display: flex; gap: 2rem;">
            <div style="flex: 2;">
              <h4 style="margin: 0 0 0.5rem 0;">
                <%= link_to "Devlog ##{devlog.id}", devlog_project_path(@project, devlog_id: devlog.id),
                    style: "color: var(--color-primary); text-decoration: none;",
                    target: "_blank" %>
                <span style="font-size: 0.8em; color: var(--color-text-muted);">
                  <%= devlog.created_at.strftime("%b %d, %Y at %l:%M %p") %>
                </span>
                <span style="font-size: 0.7em; margin-left: 0.5rem;">
                  <%= link_to "View →", devlog_project_path(@project, devlog_id: devlog.id),
                      class: "pill pill-gray",
                      style: "text-decoration: none; padding: 0.2rem 0.5rem;",
                      target: "_blank" %>
                  <% if @project.repo_link.present? %>
                    <%
                      # Extract GitHub repo info and create commits URL
                      repo_match = @project.repo_link.match(/github\.com\/([^\/]+\/[^\/]+)/)
                      if repo_match
                        repo_path = repo_match[1].sub(/\.git$/, '')

                        # Find the first (initial) devlog for this project
                        first_devlog = @project.devlogs.order(created_at: :asc).first
                        # Find previous devlog for this project (created before current devlog)
                        previous_devlog = @project.devlogs.where("created_at < ?", devlog.created_at).order(created_at: :desc).first

                        if previous_devlog && first_devlog != devlog
                          # Show commits between the initial devlog and the one before current devlog
                          since_time = first_devlog.created_at.utc.iso8601
                          until_time = previous_devlog.created_at.utc.iso8601
                          commits_url = "https://github.com/#{repo_path}/commits?since=#{since_time}&until=#{until_time}"
                          commits_title = "View GitHub commits between initial devlog (#{first_devlog.created_at}) and previous devlog (#{previous_devlog.created_at})"
                        else
                          # This is the first devlog: show all commits before it
                          until_time = devlog.created_at.utc.iso8601
                          commits_url = "https://github.com/#{repo_path}/commits?until=#{until_time}"
                          commits_title = "View all GitHub commits before first devlog (#{devlog.created_at})"
                        end
                      end
                    %>
                    <% if commits_url %>
                      <%= link_to "Commits", commits_url,
                          class: "pill pill-blue",
                          style: "text-decoration: none; padding: 0.2rem 0.5rem; margin-left: 0.25rem;",
                          target: "_blank",
                          title: commits_title %>
                    <% end %>
                  <% end %>
                </span>
              </h4>
              <div style="max-height: 200px; overflow-y: auto; background: var(--color-background-subtle); padding: 1rem; border-radius: 4px; margin: 0.5rem 0;">
                <%= simple_format(truncate(devlog.text, length: 500)) %>
              </div>
              <!-- Devlog Media -->
              <% if devlog.file.attached? %>
                <div style="margin: 1rem 0;">
                  <h4 style="margin: 0 0 0.5rem 0;">
                    Devlog Media
                  </h4>
                  <% if devlog.file.content_type&.start_with?('image/') %>
                    <img src="<%= url_for(devlog.file) %>" alt="Devlog attachment" style="width: 100%; max-width: 600px; border-radius: 8px;">
                  <% else %>
                    <video controls style="width: 100%; max-width: 600px; border-radius: 8px;">
                      <source src="<%= url_for(devlog.file) %>" type="<%= devlog.file.content_type %>">
                      Your browser does not support the video tag.
                    </video>
                  <% end %>
                </div>
              <% end %>
              <p style="font-size: 0.9em; color: var(--color-text-muted);">
                <strong>Original Time:</strong> <%= formal_seconds devlog.duration_seconds %>
                <% if devlog.ysws_review_approval&.seconds_changed? %>
                  <span class="pill pill-yellow" style="margin-left: 0.5rem;">Time Changed</span>
                <% end %>
              </p>
            </div>

            <div style="flex: 1; background: var(--color-background-subtle); padding: 1rem; border-radius: 4px;">
              <h5 style="margin: 0 0 1rem 0;">Review Decision</h5>

              <div style="margin-bottom: 1rem;">
                <label style="display: block; margin-bottom: 0.5rem; font-weight: bold;">Status:</label>
                <div style="display: flex; gap: 1rem; align-items: center;">
                  <label style="display: flex; align-items: center; cursor: pointer;">
                    <%= form.check_box "devlog_approvals[#{devlog.id}][approved]",
                        { checked: devlog.ysws_review_approval&.approved?,
                          style: "margin-right: 0.75rem; transform: scale(2); transform-origin: left center;" },
                        "1", "0" %>
                    Approve
                  </label>
                  <label style="display: flex; align-items: center; cursor: pointer;">
                    <%= form.check_box "devlog_approvals[#{devlog.id}][rejected]",
                        { checked: devlog.ysws_review_approval&.approved? == false,
                          style: "margin-right: 0.75rem; transform: scale(2); transform-origin: left center;" },
                        "1", "0" %>
                    Reject
                  </label>
                </div>
              </div>

              <div style="margin-bottom: 1rem;">
                <%= form.label "devlog_approvals_#{devlog.id}_approved_minutes", "Approved Minutes:",
                    style: "display: block; margin-bottom: 0.5rem; font-weight: bold;" %>
                <div style="display: flex; gap: 0.5rem; align-items: center; margin-bottom: 0.5rem;">
                  <%= form.number_field "devlog_approvals[#{devlog.id}][approved_minutes]",
                      value: ((devlog.ysws_review_approval&.approved_seconds || devlog.duration_seconds || 0) / 60.0).round,
                      id: "approved_minutes_#{devlog.id}",
                      min: 0,
                      style: "flex: 1; padding: 0.5rem; border: 1px solid var(--color-border); border-radius: 4px;" %>
                  <span style="color: var(--color-text-muted); font-size: 0.9em;">minutes</span>
                </div>

                <div style="display: flex; gap: 0.25rem; flex-wrap: wrap; margin-bottom: 0.5rem;">
                  <button type="button" class="pill pill-orange" style="font-size: 0.7em; padding: 0.25rem 0.5rem; cursor: pointer; border: none;"
                          onclick="adjustTimeMinutes(<%= devlog.id.to_json %>, 'half')">50%</button>
                  <button type="button" class="pill pill-orange" style="font-size: 0.7em; padding: 0.25rem 0.5rem; cursor: pointer; border: none;"
                          onclick="adjustTimeMinutes(<%= devlog.id.to_json %>, 'quarter')">25%</button>
                  <button type="button" class="pill pill-red" style="font-size: 0.7em; padding: 0.25rem 0.5rem; cursor: pointer; border: none;"
                          onclick="adjustTimeMinutes(<%= devlog.id.to_json %>, 'minus30')">-30min</button>
                  <button type="button" class="pill pill-red" style="font-size: 0.7em; padding: 0.25rem 0.5rem; cursor: pointer; border: none;"
                          onclick="adjustTimeMinutes(<%= devlog.id.to_json %>, 'minus60')">-1hr</button>
                  <button type="button" class="pill pill-gray" style="font-size: 0.7em; padding: 0.25rem 0.5rem; cursor: pointer; border: none;"
                          onclick="resetToOriginal(<%= devlog.id.to_json %>, <%= ((devlog.duration_seconds || 0) / 60.0).round.to_json %>)">Reset</button>
                </div>
              </div>

              <div style="margin-bottom: 1rem;">
                <%= form.label "devlog_approvals_#{devlog.id}_notes", "Internal Notes:",
                    style: "display: block; margin-bottom: 0.5rem; font-weight: bold;" %>
                <%= form.text_area "devlog_approvals[#{devlog.id}][notes]",
                    value: devlog.ysws_review_approval&.notes,
                    rows: 3,
                    style: "width: 100%; padding: 0.5rem; border: 1px solid var(--color-border); border-radius: 4px; resize: vertical;" %>
              </div>

              <% if devlog.ysws_review_approval %>
                <p style="font-size: 0.8em; color: var(--color-text-muted);">
                  Last reviewed: <%= devlog.ysws_review_approval.reviewed_at.strftime("%b %d, %Y at %l:%M %p") %>
                  <br>by <%= devlog.ysws_review_approval.user.display_name %>
                </p>
              <% end %>
            </div>
          </div>
        </div>
      <% end %>
    </div>
  <% end %>

  <div style="margin-top: 2rem; text-align: center; display: flex; gap: 1rem; justify-content: center; flex-wrap: wrap;">
    <button type="button" id="capto600-btn"
        class="pill pill-purple"
        style="padding: 1rem 2rem; font-size: 1.1em; cursor: pointer; border: none; text-decoration: none; background-color: #9b59b6;">
      Cap Devlogs to 600 Minutes
    </button>
    <button type="button" id="approve-all-btn"
        class="pill pill-blue"
        style="padding: 1rem 2rem; font-size: 1.1em; cursor: pointer; border: none; text-decoration: none;">
      Approve All Devlogs
    </button>
    <button type="button" id="reject-all-btn"
        class="pill pill-red"
        style="padding: 1rem 2rem; font-size: 1.1em; cursor: pointer; border: none; text-decoration: none;">
      Reject All Devlogs
    </button>
    <button type="button" id="return-to-certifier-btn"
        class="pill pill-orange"
        style="padding: 1rem 2rem; font-size: 1.1em; cursor: pointer; border: none; text-decoration: none; background-color: #ff8a00;">
      Return to Ship Certifier
    </button>
    <%= form.submit "Complete Review",
        class: "pill pill-green",
        style: "padding: 1rem 2rem; font-size: 1.1em; cursor: pointer; border: none; text-decoration: none;" %>
  </div>
<% end %>

<!-- Return to Certifier Modal -->
<div id="return-modal" style="display: none; position: fixed; top: 0; left: 0; width: 100%; height: 100%; background-color: rgba(0, 0, 0, 0.5); z-index: 1000;">
  <div style="position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); background: var(--color-background); padding: 2rem; border-radius: 8px; max-width: 500px; width: 90%;">
    <h3 style="margin: 0 0 1rem 0;">Return Project to Ship Certifier</h3>
    <p style="margin: 0 0 1.5rem 0; color: var(--color-text-muted);">
      Select the reason(s) why this project needs to be returned to the ship certifier:
    </p>

    <%= form_with url: return_to_certifier_admin_ysws_review_path(@project), method: :patch, local: true, id: 'return-form' do |f| %>
      <div style="margin-bottom: 1.5rem;">
        <% ShipCertification::YSWS_FEEDBACK_REASONS.each do |reason| %>
          <label style="display: block; margin: 0.5rem 0; cursor: pointer;">
            <input type="checkbox" name="feedback_reasons[]" value="<%= reason %>" style="margin-right: 0.5rem;">
            <%= ShipCertification::YSWS_FEEDBACK_REASON_LABELS[reason] %>
          </label>
        <% end %>
      </div>
      <div style="display: flex; gap: 1rem; justify-content: flex-end;">
        <button type="button" id="cancel-return-btn" class="pill pill-gray" style="padding: 0.75rem 1.5rem; cursor: pointer; border: none; text-decoration: none;">
          Cancel
        </button>
        <button type="submit" class="pill pill-orange" style="padding: 0.75rem 1.5rem; cursor: pointer; border: none; text-decoration: none; background-color: #ff8a00;">
          Return Project
        </button>
      </div>
    <% end %>
    <%= render "admin/projects/magic_happening_button", project: @project %>
  </div>
</div>

<script>
// Time adjustment function for minutes
function adjustTimeMinutes(devlogId, adjustment) {
  const input = document.getElementById(`approved_minutes_${devlogId}`);
  const currentValue = parseInt(input.value) || 0;
  let newValue = currentValue;

  switch(adjustment) {
    case 'half':
      newValue = Math.floor(currentValue * 0.5);
      break;
    case 'quarter':
      newValue = Math.floor(currentValue * 0.25);
      break;
    case 'minus30':
      newValue = Math.max(0, currentValue - 30); // 30 minutes
      break;
    case 'minus60':
      newValue = Math.max(0, currentValue - 60); // 60 minutes (1 hour)
      break;
  }

  input.value = newValue;
}

// Reset to original time function
function resetToOriginal(devlogId, originalMinutes) {
  const input = document.getElementById(`approved_minutes_${devlogId}`);
  input.value = originalMinutes;
}

document.addEventListener('DOMContentLoaded', function() {
  const capto600Btn = document.getElementById('capto600-btn');
  const approveAllBtn = document.getElementById('approve-all-btn');
  const rejectAllBtn = document.getElementById('reject-all-btn');
  const returnToCertifierBtn = document.getElementById('return-to-certifier-btn');
  const returnModal = document.getElementById('return-modal');
  const cancelReturnBtn = document.getElementById('cancel-return-btn');
  const returnForm = document.getElementById('return-form');

  // Checkbox mutual exclusivity logic
  document.addEventListener('change', function(e) {
    if (e.target.type === 'checkbox' && (e.target.name.includes('[approved]') || e.target.name.includes('[rejected]'))) {
      const devlogId = e.target.name.match(/devlog_approvals\[(\d+)\]/)[1];
      const approveCheckbox = document.querySelector(`input[name="devlog_approvals[${devlogId}][approved]"]`);
      const rejectCheckbox = document.querySelector(`input[name="devlog_approvals[${devlogId}][rejected]"]`);
      // If approve is checked, uncheck reject
      if (e.target.name.includes('[approved]') && e.target.checked) {
        if (rejectCheckbox) rejectCheckbox.checked = false;
      }
      // If reject is checked, uncheck approve and set minutes to 0
      if (e.target.name.includes('[rejected]') && e.target.checked) {
        if (approveCheckbox) approveCheckbox.checked = false;
        const minutesField = document.getElementById(`approved_minutes_${devlogId}`);
        if (minutesField) minutesField.value = 0;
      }
    }
  });

  // Cap to 600 minutes functionality
  capto600Btn.addEventListener('click', function() {
    const minutesInputs = document.querySelectorAll('input[id^="approved_minutes_"]');
    minutesInputs.forEach(function(input) {
      const currentValue = parseInt(input.value, 10);
      if (!isNaN(currentValue) && currentValue > 600) {
        input.value = 600;
      }
    });
  });

  // Approve all functionality with toggle
  approveAllBtn.addEventListener('click', function() {
    const isCurrentlyApproved = approveAllBtn.textContent.includes('✓');

    if (isCurrentlyApproved) {
      // Clear all selections
      const allCheckboxes = document.querySelectorAll('input[type="checkbox"]');
      allCheckboxes.forEach(function(checkbox) {
        if (checkbox.name.includes('[approved]') || checkbox.name.includes('[rejected]')) {
          checkbox.checked = false;
        }
      });

      // Reset button
      approveAllBtn.textContent = 'Approve All Devlogs';
      approveAllBtn.style.backgroundColor = '';
    } else {
      // Find all approve checkboxes and check them
      const approveCheckboxes = document.querySelectorAll('input[type="checkbox"]');

      approveCheckboxes.forEach(function(checkbox) {
        if (checkbox.name.includes('[approved]')) {
          checkbox.checked = true;

          // Uncheck corresponding reject checkbox
          const devlogId = checkbox.name.match(/devlog_approvals\[(\d+)\]/)[1];
          const rejectCheckbox = document.querySelector(`input[name="devlog_approvals[${devlogId}][rejected]"]`);
          if (rejectCheckbox) rejectCheckbox.checked = false;
        }
      });

      // Update button text to indicate action was performed
      approveAllBtn.textContent = 'All Devlogs Approved ✓';
      approveAllBtn.style.backgroundColor = 'var(--color-success)';

      // Reset reject all button if it was active
      rejectAllBtn.textContent = 'Reject All Devlogs';
      rejectAllBtn.style.backgroundColor = '';
    }
  });

  // Reject all functionality with toggle
  rejectAllBtn.addEventListener('click', function() {
    const isCurrentlyRejected = rejectAllBtn.textContent.includes('✓');

    if (isCurrentlyRejected) {
      // Clear all selections and restore original minutes
      const allCheckboxes = document.querySelectorAll('input[type="checkbox"]');
      allCheckboxes.forEach(function(checkbox) {
        if (checkbox.name.includes('[approved]') || checkbox.name.includes('[rejected]')) {
          checkbox.checked = false;

          // If it was a reject checkbox, restore original minutes
          if (checkbox.name.includes('[rejected]')) {
            const devlogId = checkbox.name.match(/devlog_approvals\[(\d+)\]/)[1];
            const minutesField = document.getElementById(`approved_minutes_${devlogId}`);
            if (minutesField) {
              // Find the original value from the reset button
              const resetButton = document.querySelector(`[onclick*="resetToOriginal(${devlogId}"]`);
              if (resetButton) {
                const originalMatch = resetButton.getAttribute('onclick').match(/resetToOriginal\(\d+, (\d+)\)/);
                if (originalMatch) {
                  minutesField.value = originalMatch[1];
                }
              }
            }
          }
        }
      });

      // Reset button
      rejectAllBtn.textContent = 'Reject All Devlogs';
      rejectAllBtn.style.backgroundColor = '';
    } else {
      // Find all reject checkboxes and check them
      const rejectCheckboxes = document.querySelectorAll('input[type="checkbox"]');

      rejectCheckboxes.forEach(function(checkbox) {
        if (checkbox.name.includes('[rejected]')) {
          checkbox.checked = true;

          // Uncheck corresponding approve checkbox and set minutes to 0
          const devlogId = checkbox.name.match(/devlog_approvals\[(\d+)\]/)[1];
          const approveCheckbox = document.querySelector(`input[name="devlog_approvals[${devlogId}][approved]"]`);
          if (approveCheckbox) approveCheckbox.checked = false;

          const minutesField = document.getElementById(`approved_minutes_${devlogId}`);
          if (minutesField) minutesField.value = 0;
        }
      });

      // Update button text to indicate action was performed
      rejectAllBtn.textContent = 'All Devlogs Rejected ✓';
      rejectAllBtn.style.backgroundColor = 'var(--color-error)';

      // Reset approve all button if it was active
      approveAllBtn.textContent = 'Approve All Devlogs';
      approveAllBtn.style.backgroundColor = '';
    }
  });

  // Return to certifier functionality
  returnToCertifierBtn.addEventListener('click', function() {
    returnModal.style.display = 'block';
  });

  cancelReturnBtn.addEventListener('click', function() {
    returnModal.style.display = 'none';
  });

  // Close modal when clicking outside
  returnModal.addEventListener('click', function(e) {
    if (e.target === returnModal) {
      returnModal.style.display = 'none';
    }
  });

  // Validate form submission
  returnForm.addEventListener('submit', function(e) {
    const checkedBoxes = returnForm.querySelectorAll('input[name="feedback_reasons[]"]:checked');
    if (checkedBoxes.length === 0) {
      e.preventDefault();
      alert('Please select at least one reason for returning the project.');
    }
  });
});
</script>

</body>
