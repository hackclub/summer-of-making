<% content_for :title, "Buy #{@item.name}" %>

<div class="max-w-4xl mx-auto p-4 md:p-8">
  <!-- Back to shop link -->
  <%= link_to shop_path, class: "inline-flex items-center text-saddle-taupe hover:text-darker-taupe mb-6 transition-colors duration-200" do %>
    <%= inline_svg "arrow-left.svg", class: "h-5 w-5 mr-2" if defined?(inline_svg) %>
    <span class="text-lg">‚Üê Back to Shop</span>
  <% end %>

  <div class="bg-soft-bone card-pixel p-6 md:p-8">
    <div class="grid md:grid-cols-2 gap-8 items-start">
      <!-- Item image and details -->
      <div class="space-y-6">
        <% if @item.image.attached? %>
          <div class="bg-white p-4 card-pixel">
            <%= image_tag @item.image.variant(:thumb),
                          class: "w-full h-64 object-contain mx-auto",
                          alt: @item.name %>
          </div>
        <% else %>
          <div class="bg-white p-4 card-pixel h-64 flex items-center justify-center">
            <span class="text-6xl">üì¶</span>
          </div>
        <% end %>

        <div class="space-y-3">
          <h1 class="text-3xl font-bold text-darker-taupe"><%= @item.name %></h1>

          <% if @item.description.present? %>
            <p class="text-lg text-saddle-taupe leading-relaxed"><%= @item.description %></p>
          <% end %>

          <% if @item.under_the_fold_description.present? %>
            <div class="bg-white/50 p-4 card-pixel">
              <p class="text-base text-saddle-taupe leading-relaxed"><%= simple_format(@item.under_the_fold_description) %></p>
            </div>
          <% end %>
          <% if @item.is_a?(ShopItem::FreeStickers) %>
            <%= image_tag "free_stickers.png" %>
          <% end %>

          <% if current_user&.is_admin? && @item.internal_description.present? %>
            <div class="bg-vintage-red/10 p-3 card-pixel">
              <p class="text-sm text-vintage-red font-semibold">Internal Description:</p>
              <p class="text-sm text-vintage-red"><%= @item.internal_description %></p>
            </div>
          <% end %>
        </div>
      </div>

      <!-- Purchase form -->
      <div class="bg-white card-pixel p-6">
        <h2 class="text-2xl font-bold text-darker-taupe mb-6">Complete Your Order</h2>

        <!-- Price display -->
        <div class="space-y-4 mb-6">
          <% if @regional_price.present? && @regional_price > 0 %>
            <div class="flex items-center justify-between py-3 border-b border-saddle-taupe/20">
              <span class="text-lg">Price:</span>
              <span class="text-2xl font-bold text-forest flex items-center">
                <%= render_shells(@regional_price) %>
                <% if @regionalization_enabled && @selected_region && @regional_price != @item.ticket_cost %>
                  <span class="ml-2 text-sm text-gray-500 line-through">
                    <%= render_shells(@item.ticket_cost) %>
                  </span>
                <% end %>
              </span>
            </div>
          <% end %>
        </div>

        <%= form_with url: checkout_shop_item_path(@item), method: :post, class: "space-y-6" do |f| %>
          <!-- Error messages -->
          <% if @order&.errors&.any? %>
            <div class="bg-vintage-red/10 border border-vintage-red p-4 card-pixel">
              <h3 class="font-bold text-vintage-red mb-2">Unable to complete purchase:</h3>
              <ul class="text-sm text-vintage-red space-y-1">
                <% @order.errors.full_messages.each do |message| %>
                  <li>‚Ä¢ <%= message %></li>
                <% end %>
              </ul>
            </div>
          <% end %>
          <!-- Quantity selector -->
          <div class="space-y-2">
            <%= f.label :quantity, class: "block text-lg font-semibold text-darker-taupe" %>
            <% max_quantity = @item.one_per_person_ever? ? 1 : (@item.max_qty || 10) %>
            <%= f.number_field :quantity,
                               value: 1,
                               min: 1,
                               max: max_quantity,
                               class: "w-full px-4 py-3 border-2 border-saddle-taupe/30 rounded-none bg-white text-lg text-center font-semibold focus:border-forest focus:outline-none transition-colors duration-200" %>
            <p class="text-sm text-saddle-taupe">
              <% if @item.one_per_person_ever? %>
                Limited to 1 per person, ever
              <% else %>
                Maximum <%= @item.max_qty || 10 %> items per order
              <% end %>
            </p>
          </div>

          <!-- Address picker for all orders -->
          <div class="space-y-2">
            <%= render 'shared/address_picker',
                       user: current_user,
                       form: f,
                       field_name: 'shipping_address_id',
                       label_text: 'Shipping Address',
                       selected_region: @selected_region,
                       regionalization_enabled: @regionalization_enabled,
                       shop_item: @item %>
          </div>

          <!-- Cost preview -->
          <% if @regional_price.present? && @regional_price > 0 %>
            <div class="bg-forest/10 p-4 card-pixel">
              <h3 class="font-semibold text-forest mb-3">Order Summary</h3>
              <div class="space-y-2">
                <div class="flex justify-between">
                  <span class="text-saddle-taupe">Item Price:</span>
                  <span class="font-semibold flex items-center">
                    <span class="mr-1"><%= shell_icon %></span>
                    <span id="item-price"><%= number_with_delimiter(@regional_price) %></span>
                  </span>
                </div>
                <div class="flex justify-between">
                  <span class="text-saddle-taupe">Quantity:</span>
                  <span class="font-semibold" id="quantity-display">1</span>
                </div>
                <div class="border-t border-forest/20 pt-2">
                  <div class="flex justify-between">
                    <span class="text-forest font-bold">Total Cost:</span>
                    <span class="text-xl font-bold flex items-center" id="total-cost-container">
                      <%= render_shells(@regional_price) %>
                    </span>
                  </div>
                  <div id="insufficient-funds-warning" class="mt-2 text-sm text-vintage-red font-semibold hidden">
                    ‚ö†Ô∏è Insufficient funds! Need <span id="shortage-amount">0</span> more shells.
                  </div>
                </div>
              </div>
            </div>
          <% end %>

          <!-- User balance info (if tickets) -->
          <% if @regional_price.present? && @regional_price > 0 %>
            <div class="bg-forest/10 p-4 card-pixel">
              <div class="flex items-center justify-between">
                <span class="text-forest font-semibold">Your Current Balance:</span>
                <span class="text-xl font-bold text-forest flex items-center">
                  <span class="mr-2"><%= shell_icon %></span>
                  <%= number_with_delimiter(current_user.balance) %>
                </span>
              </div>
              <% if current_user.balance < @regional_price %>
                <p class="text-vintage-red text-sm mt-2 font-semibold">
                  ‚ö†Ô∏è Insufficient shells! You
                  need <%= number_with_delimiter(@regional_price - current_user.balance) %> more shells.
                </p>
              <% end %>
            </div>
          <% end %>

          <!-- One per person warning -->
          <!-- Black market warning -->

          <!-- Submit button -->
          <%
            is_one_per_person = @item.one_per_person_ever?
            has_existing_order = current_user.shop_orders.where(shop_item_id: @item.id).exists?
            already_ordered = is_one_per_person && has_existing_order

            # Check if regionalization requires valid address selection
            requires_valid_address = @regionalization_enabled && @selected_region
            button_disabled = already_ordered || requires_valid_address

            button_text = if already_ordered
                           "Already Purchased"
                         elsif requires_valid_address
                           "Select Valid Address"
                         else
                           "Get!"
                         end

            button_classes = if already_ordered
                               "w-full bg-gray-400 text-gray-600 font-bold py-4 px-6 btn-pixel text-lg cursor-not-allowed"
                             elsif requires_valid_address
                               "w-full bg-gray-400 text-gray-600 font-bold py-4 px-6 btn-pixel text-lg cursor-not-allowed"
                             else
                               "w-full bg-forest hover:bg-forest/90 text-white font-bold py-4 px-6 btn-pixel text-lg transition-colors duration-200 cursor-pointer"
                             end
          %>
          <%= f.submit button_text,
                       id: "purchase-button",
                       disabled: button_disabled,
                       class: button_classes,
                       data: { initial_disabled: requires_valid_address } %>
        <% end %>
        <% if @item.is_a?(ShopItem::FreeStickers) %>
          <div class="text-sm text-saddle-taupe mt-4">
            Once we verify you're a teenager, we'll send you an envelope of Hack Club stickers in the mail :-)
          </div>
        <% end %>
      </div>
    </div>
  </div>
</div>

<style>
    .btn-pixel {
        box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.1),
        2px 2px 0 0 rgba(0, 0, 0, 0.1);
    }

    .btn-pixel:hover {
        transform: translate(1px, 1px);
        box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.1),
        1px 1px 0 0 rgba(0, 0, 0, 0.1);
    }

    .card-pixel {
        box-shadow: 0 0 0 2px rgba(0, 0, 0, 0.1),
        4px 4px 0 0 rgba(0, 0, 0, 0.05);
    }
</style>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const quantityInput = document.querySelector('input[name="quantity"]');
        const quantityDisplay = document.getElementById('quantity-display');
        const totalCostDisplay = document.getElementById('total-cost-container');
        const totalCostContainer = document.getElementById('total-cost-container');
        const insufficientFundsWarning = document.getElementById('insufficient-funds-warning');
        const shortageAmount = document.getElementById('shortage-amount');
        const submitButton = document.getElementById('purchase-button');
        const orderSummary = totalCostContainer?.closest('.bg-forest\\/10');

        const itemPrice = <%= raw((@regional_price || 0).to_json) %>;
        const userBalance = <%= raw((current_user.balance || 0).to_json) %>;

        console.log('Elements found:', {
            quantityInput: !!quantityInput,
            quantityDisplay: !!quantityDisplay,
            totalCostDisplay: !!totalCostDisplay,
            totalCostContainer: !!totalCostContainer
        });

        if (quantityInput && quantityDisplay && totalCostDisplay && totalCostContainer) {
            console.log('All elements found, setting up updateCostPreview');
            function updateCostPreview() {
                console.log('updateCostPreview called');
                const quantity = parseInt(quantityInput.value) || 1;
                const totalCost = itemPrice * quantity;
                const canAfford = userBalance >= totalCost;

                quantityDisplay.textContent = quantity;
                totalCostDisplay.innerHTML = totalCost.toLocaleString() + ' <i class="fa-solid fa-shell text-forest"></i>';

                // Check if regional restriction is in effect or if we're waiting for address selection
                const hasRegionalRestriction = submitButton && submitButton.hasAttribute('data-region-invalid');
                const waitingForAddress = submitButton && submitButton.dataset.initialDisabled === 'true' && submitButton.disabled;
                const regionalizationEnabled = <%= raw((@regionalization_enabled || false).to_json) %>;

                // Update styling based on affordability and regional restrictions
                if (regionalizationEnabled && (hasRegionalRestriction || waitingForAddress)) {
                    // Regional restriction or address selection takes precedence - don't override
                    return;
                } else if (canAfford) {
                    // Can afford - green styling
                    totalCostContainer.className = 'text-xl font-bold text-forest flex items-center';
                    if (orderSummary) {
                        orderSummary.className = orderSummary.className.replace('bg-vintage-red/10', 'bg-forest/10');
                    }
                    if (insufficientFundsWarning) {
                        insufficientFundsWarning.classList.add('hidden');
                    }
                    if (submitButton) {
                        submitButton.disabled = false;
                        submitButton.value = 'Complete Purchase';
                        submitButton.className = 'w-full bg-forest hover:bg-forest/90 text-white font-bold py-4 px-6 btn-pixel text-lg transition-colors duration-200 cursor-pointer';
                    }
                } else {
                    // Can't afford - red/grey styling
                    totalCostContainer.className = 'text-xl font-bold text-vintage-red flex items-center';
                    if (orderSummary) {
                        orderSummary.className = orderSummary.className.replace('bg-forest/10', 'bg-vintage-red/10');
                    }
                    if (insufficientFundsWarning && shortageAmount) {
                        insufficientFundsWarning.classList.remove('hidden');
                        shortageAmount.textContent = (totalCost - userBalance).toLocaleString();
                    }
                    if (submitButton) {
                        submitButton.disabled = true;
                        submitButton.value = 'Insufficient Shells';
                        submitButton.className = 'w-full bg-saddle-taupe/30 text-saddle-taupe/60 font-bold py-4 px-6 btn-pixel text-lg cursor-not-allowed';
                    }
                }
            }

            console.log('Adding event listeners to quantity input');
            quantityInput.addEventListener('input', updateCostPreview);
            quantityInput.addEventListener('change', updateCostPreview);

            // Run initial update
            console.log('Running initial updateCostPreview');
            updateCostPreview();
        } else {
            console.log('Missing required elements - quantity update will not work');
        }
    });
</script>
